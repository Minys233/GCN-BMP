Project: Graph Neural Network Based DDI Prediction Framework

Environment: Ubuntu 16.04

Programming Language: Python 2.7

Dataset: the DDI dataset released by [Zhang et al., 2017]. The original dataset contains 548 kinds of drugs. For 546 drugs
of them, We supplemented the SMILES representation for each drug molecule represented by its DrugBankID in DrugBank[Wishart et al., 2007]. 
For the remaining two drugs (DB00407 and DB00930), the SMILES representation is not available in DrugBank or ZINC databases.
Therefore, the processed dataset only contains 546 kinds of drug molecules. The dataset contains the following files:

./dataset/drug_list:  
    drug_list.csv: contains the detailed information about every drug molecule.
./dataset/interaction:
    drug_based/: the dataset splitted by the drug-based splitter so that the drugs in the train
    dataset and the test dataset are not intersected. 
    inter_based/: the dataset splitted by the interaction-based splitter so that the drugs in the
    train dataset can be visible in the test dataset.
    isc/: the dataset generated by the whole dataset with different scales.
    sample/: sample dataset for the purpose of debugging.
./groun_truth:
    drug_drug_matrix.csv

References:
[Wishart et al., 2007] David S Wishart, Craig Knox, An Chi Guo,
Dean Cheng, Savita Shrivastava, Dan Tzur, Bijaya Gautam,
and Murtaza Hassanali. Drugbank: a knowledgebase for
drugs, drug actions and drug targets. Nucleic acids research,
36(suppl 1):D901–D906, 2007.
[Zhang et al., 2017] Wen Zhang, Yanlin Chen, Feng Liu, Fei Luo,
Gang Tian, and Xiaohong Li. Predicting potential drug-drug
interactions by integrating chemical, biological, phenotypic and
network data. BMC bioinformatics, 18(1):18, 2017.

The Detailed Information about the DDI dataset:
Drug-based Random Splitter
Statistics: 
Train# total: 94395, pos: 30464, neg: 63931
Valid# total: 23490, pos: 6990, neg: 16500
Test # total: 23925, pos: 8400, neg: 15525
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Drug-based Scaffold Splitter
Statistics: 
Train# total: 94830, pos: 32123, neg: 62707
Valid# total: 23544, pos: 8260, neg: 15284
Test # total: 23544, pos: 5839, neg: 17705
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Interaction-based Stratified Splitter
Statistics: 
Train# total: 118158, pos: 38187, neg: 79971
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Interaction-based Non-stratified Splitter
Statistics: 
Train# total: 10000, pos: 5000, neg: 5000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 20000, pos: 10000, neg: 10000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 30000, pos: 15000, neg: 15000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 40000, pos: 20000, neg: 20000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 50000, pos: 25000, neg: 25000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 60000, pos: 30000, neg: 30000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.


Statistics: 
Train# total: 70000, pos: 35000, neg: 35000
Valid# total: 14769, pos: 4774, neg: 9995
Test # total: 14769, pos: 4774, neg: 9995
Test dataset generated.
Train dataset generated.
Valid dataset generated.

测试命令：
python train_ggnn_hole.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --layer-aggregator=attn --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_equal_ggnn_epoch200_lr0.001_exp0.5_wt0_laattn_fph32_conv8_nh_hole --gpu=0 --train-datafile=dataset/interaction/sample/sample200.csv --valid-datafile=dataset/interaction/sample/sample200.csv --sim-method=hole --augment=True

python reconstruction.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims=16 --gpu=1 --train-datafile=dataset/interaction/sample/sample200.csv --valid-datafile=dataset/interaction/sample/sample200.csv --sim-method=hole

The top 20 drugs with the most number of interacting drugs.
DB00338, 509
DB00316, 495
DB00451, 493
DB00448, 468
DB00863, 466
DB00186, 463
DB00641, 459
DB00215, 458
DB00695, 457
DB00425, 457
DB00722, 456
DB00213, 455
DB00264, 449
DB01001, 448
DB00295, 439
DB00635, 439
DB00813, 438
DB01050, 435
DB00758, 435
DB00945, 435

The bottom 20 drugs with the most number of interacting drugs:
DB00307, 11
DB00701, 9
DB00591, 9
DB00593, 8
DB00558, 8
DB00543, 7
DB00294, 6
DB01053, 6
DB00353, 6
DB00261, 5
DB00278, 5
DB00419, 5
DB00632, 4
DB00714, 4
DB01019, 3
DB00671, 3
DB00548, 3
DB00917, 2
DB01265, 2
DB00934, 1

The middle 20 drugs with the most number of interacting drugs:
DB00582, 162
DB00951, 160
DB00804, 160
DB00862, 160
DB00853, 159
DB01005, 158
DB00495, 158
DB00440, 158
DB00612, 157
DB00489, 156
DB00877, 156
DB00542, 153
DB00889, 152
DB01072, 151
DB01045, 150
DB01026, 149
DB00757, 149
DB01085, 148
DB01204, 147
DB00277, 147

几个效果不错的co-attention模型：
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole_co_alter snapshot_iter_192500
0.9513 0.9207 0.8811 0.8250
result_isc35000_ggnn_epoch200_lr0.0001_exp0.5_wt0_fph32_conv8_nh_hole_co_alter snapshot_iter_157500
0.9428 0.9096 0.8635 0.8036
result_isc35000_ggnn_epoch200_lr0.0005_exp0.5_wt0_fph32_conv8_nh_hole_co_alter snapshot_iter_131250
0.9488 0.9174 0.8782 0.8195
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole_co_alter snapshot_iter_175000
0.9502 0.9186 0.8807 0.8240
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_para snapshot_iter_140000
0.9519 0.9215 0.8829 0.8259

运行模型的命令：
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole_co_para --gpu=0 --train-datafile=dataset/interaction/sample/sample200.csv --valid-datafile=dataset/interaction/sample/sample200.csv --sim-method=ntn --augment=True --attn=para

Fine-grained coattention模型的结果：
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_nie snapshot_iter_96250 

几个Find-grained Coattention Model的运行命令：
Pool Fine-grained Coattention Model:
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_pool --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=mlp --augment=True --attn=pool

VQA Fine-grained Coattention Model:
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_vqa --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=mlp --augment=True --attn=vqa

Nie Fine-grained Coattention model:
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_nie --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=mlp --augment=True --attn=nie
模型训练已经完成，效果不佳。

将link predictor调整为ntn
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_
ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method
=ntn --augment=True --attn=nie

在ds数据集上使用模型
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_ds_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/drug_based/ddi_ds_train.csv --valid-datafile=dataset/interaction/drug_based/ddi_ds_valid.csv --sim-method=ntn --augment=True --attn=nie

在dr数据集上使用模型
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_dr_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/drug_based/ddi_dr_train.csv --valid-datafile=dataset/interaction/drug_based/ddi_dr_valid.csv --sim-method=ntn --augment=True --attn=nie

将link predictor调整为ntn，学习速率调整为0.0005
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.0005 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.0005_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-meth
od=ntn --augment=True --attn=nie
0.9510 0.9190 0.8740 0.8184

加入l2-norm=0.0005
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie_l2_0.0005 --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=nie --l2-rate=0.0005
0.9464 0.9122 0.8655 0.8077

加入nie co-attention
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie  snapshot_iter_148750
0.9533 0.9223 0.8808 0.8248

加入pool co-attention
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_pool 

vqa coattention的性能：
result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole_co_vqa
很差

result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_vqa
0.9229 0.8742 0.8384 0.7702 

result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_vqa
0.9495 0.9181 0.8755 0.8179

测试低相似度数据集的性能：
feature=chem
graph model: 
0.9662 0.9347 0.9013 0.8441
ensemble model: 
0.9438 0.9049 0.8907 0.8092

feature=enzyme
graph model:
0.9663 0.9377 0.8983 0.8470
ensemble model:
0.9451 0.9119 0.8888 0.8162

feature=sideeffect
graph model:
0.9671 0.9371 0.8999 0.8449
ensemble model:
0.9461 0.9109 0.8915 0.8149

feature=offsideeffect
graph model:
0.9666 0.9398 0.8984 0.8498
ensemble model:
0.9456 0.9147 0.8885 0.8193

feature=indication
graph model:
0.9669 0.9401 0.8988 0.8497
ensemble model:
0.9473 0.9161 0.8900 0.8212

feature=transporter
graph model:
0.9656 0.9364 0.8976 0.8452
ensemble model:
0.9443 0.9101 0.8876 0.8132

feature=target
graph model:
0.9666 0.9398 0.8982 0.8495
ensemble model:
0.9460 0.9152 0.8891 0.8202 

feature=pathway
graph model:
0.9664 0.9399 0.8978 0.8487
ensemble model:
0.9458 0.9149 0.8896 0.8206

high similarity part
feature=chem
graph model:
0.9666 0.9436 0.8957 0.8540
ensemble model:
0.9465 0.9214 0.8864 0.8266

feature=side effect
graph model:
0.9613 0.9529 0.8886 0.8756
ensemble model:
0.9465 0.9214 0.8864 0.8266

feature=off side effect
graph model:
0.9527 0.9654 0.8757 0.8815
ensemble model:
0.9317 0.9468 0.8552 0.8531

feature=indication
graph model:
0.9385 0.9477 0.8658 0.8764
ensemble model:
0.8573 0.9003 0.7805 0.7652

feature=target
graph model:
0.9617 0.9553 0.8974 0.8803
ensemble model:
0.9206 0.9116 0.8421 0.8037

feature=transporter
graph model:
0.9779 0.9823 0.9046 0.9171
ensemble model:
0.9598 0.9720 0.9028 0.9111

feature=enzyme
graph model:
0.9677 0.9649 0.8944 0.8861
ensemble model:
0.9479 0.9471 0.8784 0.8602

feature=pathway
graph model:
0.9663 0.9416 0.9019 0.8680
ensemble model:
0.9424 0.9168 0.8708 0.8107

2019年5月16日：
1.鉴于nie-coattention的性能优于vqa-coattention，二者结构的差别在于两个方面：
* nie-coattention没有使用激活函数，vqa-coattention使用了激活函数tanh
* nie-coattention对匹配矩阵按行按列进行了归一化处理，vqa-coattention没有这方面的处理
修改nie-coattention的激活函数，使用tanh
在vqa-coattention中softmax归一化处理
命令：
nie-coattention
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=nie 

在coattention部件之后加上一层前馈网络
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims=8 --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh8_ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=nie

vqa-coattention:
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_mlp_co_vqa --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=mlp --augment=True --attn=vqa

2.使用bimpm的三种匹配策略：
    a.Max-Pooling-Matching
    b.Attentive-Matching
    c.Attentive-Max-Matching
效果很差

severx44
python train_binary.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole_co_bimpm --gpu=2 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=hole --augment=True --attn=bimpm

2019年5月17日：
1.重新跑nie-coattention的程序，不使用程序train_binary.py，而使用train_modify_eval2.py，消除程序重构的影响。
python train_ddi_modify_eval3.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_nie --gpu=0 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=nie
ttn=nie
2.修正图编码器read-out阶段中的global-attention/gate机制，设置threshold，当threshold<0.1时，忽略该原子。
threshold=0.1
python train_ddi_modify_eval2.py --method=ggnn --epoch=200 --learning-rate=0.005 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.005_exp0.5_wt0_fph32_conv8_nh_hole --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=hole --augment=True
效果极差，不予考虑。
3.实现由另一实体修正的global coattention  
测试命令：
python train_ddi_modify_eval3.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_global --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=global
4.实现由另一实体修正的neural coattention
测试命令：
train_ddi_modify_eval3.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_ntn_co_neural --gpu=1 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=ntn --augment=True --attn=neural

5.将GGNN中的GRU替换为fuse gate
python train_ddi_modify_eval2.py --method=ggnn --epoch=200 --learning-rate=0.001 --exp-shift-rate=0.5 --weight-tying=False --fp-hidden-dim=32 --conv-layers=8 --net-hidden-dims= --out=result_isc35000_ggnn_dev_fuse_epoch200_lr0.001_exp0.5_wt0_fph32_conv8_nh_hole --gpu=2 --train-datafile=dataset/interaction/isc/ddi_ib_isc35000_train.csv --valid-datafile=dataset/interaction/isc/ddi_ib_isc35000_valid.csv --sim-method=hole --augment=True
